{"version":3,"sources":["services/PersonService.js","components/Filter.js","components/Notification.js","components/Person.js","components/Content.js","components/Form.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","search","handleSearch","value","onChange","Notification","notification","background","error","notificationStyle","color","fontSize","padding","style","Person","person","handleClick","name","number","onClick","Content","people","filtered","filter","toLowerCase","includes","map","key","Form","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","App","useState","persons","setPersons","setNotification","setError","setNewName","setNewNumber","setSearch","useEffect","personService","currentContacts","showNotification","isError","setTimeout","event","target","addPerson","preventDefault","personObject","trim","indexOf","window","confirm","personToEdit","find","changedPerson","returnedPerson","catch","concat","personToRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bf6ed11.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\n\r\nconst Filter = ({ search, handleSearch }) => (\r\n    <div>\r\n        filter shown with <input value={search} onChange={handleSearch} />\r\n    </div>\r\n)\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({ notification, error }) => {\r\n\r\n  let background = 'green'\r\n\r\n  if (error) {\r\n    background = 'red'\r\n  }\r\n\r\n  const notificationStyle = {\r\n    color: 'white',\r\n    background: background,\r\n    fontSize: 20,\r\n    padding: 5,\r\n  }\r\n\r\n  if (notification === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div style={notificationStyle}>\r\n      {notification}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Person = ({ person, handleClick }) =>\r\n  <div>\r\n    {person.name}&nbsp;{person.number}&nbsp;\r\n    <button onClick={() => handleClick(person.id)}>DELETE</button>\r\n  </div>\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Content = ({ people, search, handleClick }) => {\r\n  const filtered = people.filter(person => person.name.toLowerCase().includes(search.toLowerCase()))\r\n  const rows = () => filtered.map(person => <Person key={person.name} person={person} handleClick={handleClick} />)\r\n  return (\r\n    <div>\r\n      {rows()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Content","import React from 'react'\r\n\r\nconst Form = ({ addName, newName, handleNameChange, newNumber, handleNumberChange }) => (\r\n    <form onSubmit={addName}>\r\n        <div>\r\n            name: <input value={newName} onChange={handleNameChange} />\r\n        </div>\r\n        <div>\r\n            number: <input value={newNumber} onChange={handleNumberChange} />\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n)\r\n\r\nexport default Form","import React, { useState, useEffect } from 'react'\nimport personService from './services/PersonService'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport Content from './components/Content'\nimport Form from './components/Form'\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [notification, setNotification] = useState(null)\n  const [error, setError] = useState(false)\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [search, setSearch] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(currentContacts => {\n        setPersons(currentContacts)\n      })\n  }, [])\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const showNotification = (notification, isError) => {\n    setError(isError)\n    setNotification(notification)\n    setTimeout(() => {\n        setNotification(null)\n        setError(false)\n    }, 3500)\n  }\n\n  const addPerson = (event) => {\n\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const personNames = persons.map(persons =>\n      persons.name.trim().toLowerCase()\n    )\n\n    if (personNames.indexOf(newName.trim().toLowerCase()) !== -1) {\n      if (window.confirm(`${newName} is already added to phonebook, replace?`)\n      ){\n        const personToEdit = persons.find(person =>\n          person.name.trim().toLowerCase() === newName.trim().toLowerCase()\n        )\n        const changedPerson = { ...personToEdit, number: newNumber }\n        personService\n          .update(changedPerson.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person =>\n              person.id !== personToEdit.id ? person : returnedPerson)\n            )\n            setNewName('')\n            setNewNumber('')\n            showNotification(`${newName} updated.`, false)\n          })\n          .catch(error => {\n            setPersons(persons.filter(person => person.id !== personToEdit.id))\n            showNotification(`${newName} has been removed.`, true)\n          })\n      }\n    } else {\n        personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          showNotification(`${newName} added.`, false)\n        })\n    }\n  }\n\n  const removePerson = id => {\n    const personToRemove = persons.find(person => person.id === id)\n    if (window.confirm(`Do you want to delete ${personToRemove.name}?`)) {\n        personService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id))\n          showNotification(`Removed ${personToRemove.name}`, false)\n        })\n        .catch(error => {\n          setPersons(persons.filter(person => person.id !== id))\n          showNotification(`${personToRemove.name} has already been removed.`, true)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>      \n      <Notification notification={notification} error={error} />\n      <Filter search={search} handleSearch={handleSearch} />\n      <h3>Add a new</h3>\n      <Form\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange} />\n      <h3>Numbers</h3>\n      <Content\n        people={persons}\n        search={search}\n        handleClick={removePerson} />\n    </div>\n\n  )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}